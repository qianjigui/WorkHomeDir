#!/bin/bash
#This shell is using for tanslate the pdf file to many jpg files.
#You can make your copyright more safely.
#Version 0.1.2
#Format the jpg files' name. The point is the length of number. To add more zero number in the front of the old number.
#Version 0.1.1
#Change the var of totPage 's getting value method, it use the sed to get the number
#Version 0.0.1
#The basic function

if [ $# != 1 ]
then
  echo 'pdftojpg version 0.1.2'
  echo 'Copyright 2001-2008 by QJGui(qianjigui@gmail.com)'
  echo 'Usage: pdftojpg <PDF-file>'
  exit
fi

###############Get the basic information about the pdf file
#pdf File name
pdfFile=$1
if [  -e $pdfFile ]
then
  echo "Find File: $pdfFile"
else
  echo "Can not find the pdf File: $pdfFile"
  exit
fi
#pdf File name without the type(.pdf)
pdfFileName=${pdfFile%.pdf}
#Create the dictionary
jpgDir=$pdfFileName-pdf2jpg
if [ -e $jpgDir ]
then
  echo "The dictionary of $jpgDir exists. Removing it......"
  rm -r $jpgDir
fi
echo "Make a new dictionary $jpgDir......"
mkdir $jpgDir
#Get the total page of the pdf file
count=0
totPage=`pdfinfo $pdfFile | grep 'Pages:*' `
totPage=`echo $totPage|sed -e's/Pages: *//g'`
echo "Total page number: $totPage"
#####################Get Basic Info End ###########

lOfTotPage=${#totPage}
while [ $count -lt $totPage ] 
do
  count=`expr $count + 1`
  fNumber=$count
  while [ ${#fNumber} -lt $lOfTotPage ]
  do
    fNumber="0$fNumber"
  done
  jpgFile=$pdfFileName-$fNumber.jpg
  echo "Convert the page $count/$totPage......"
  pdftoppm -f $count -l $count $pdfFile | pnmtojpeg > ./$jpgDir/$jpgFile
done

echo "Success. Finish the job. Please see the $jpgDir "
